<h1>opengl procedural planet renderer</h1>

<p>
this project was built for my computer graphics course at northeastern. it is programmed in c++ using sdl2 to
create the application and handle inputs, opengL 3.3 and glsl to render triangles on the gpu. while i had plenty
of experience creating games and graphical applications prior, this was the first program where i was creating
gpu buffers myself.
</p>

<h2>development</h2>

<p>
the final project was completely open ended. meaning that as long as the idea we intended to implement was relevant to 
the field of computer graphics, we could persue it. i had built proceduraly generated terrain before in unity, but i
had never procedurally generated triangles on a 3d surface. after some research i decided that i would use 3d perlin noise
to warp the triangles on an icosohedron away from its center.
</p>
